# top-level http config for websocket headers
# # If Upgrade is defined, Connection = upgrade
# # If Upgrade is empty, Connection = close
map $http_upgrade $connection_upgrade {
	default upgrade;
	''      close;
}

map $sent_http_content_type $expires {
    "text/html"                 epoch;
    "text/html; charset=utf-8"  epoch;
    default                     off;
}

# Main Server
server {
	server_name aretian.dev www.aretian.dev;
	# root /home/fer/aretian/aretian-platform/dist;
	# index index.html index.htm index.nginx-debian.html;

    location / {
        expires $expires;

        include /etc/nginx/proxy_params;
        proxy_redirect                      off;
        # proxy_set_header Host               $host;
        # proxy_set_header X-Real-IP          $remote_addr;
        # proxy_set_header X-Forwarded-For    $proxy_add_x_forwarded_for;
        # proxy_set_header X-Forwarded-Proto  $scheme;
        proxy_read_timeout          1m;
        proxy_connect_timeout       1m;
        proxy_pass                          http://127.0.0.1:3000; # set the address of the Node.js instance here
    }

	location /jupyter/ {    
	# NOTE important to also set base url of jupyterhub to /jupyter in its config
		proxy_pass http://127.0.0.1:8000;

		proxy_redirect   off;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header Host $host;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header X-Forwarded-Proto $scheme;

		# websocket headers
		proxy_set_header Upgrade $http_upgrade;
		proxy_set_header Connection $connection_upgrade;
	}

	listen [::]:443 http2 ssl ipv6only=on; # managed by Certbot
	listen 443 http2 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/aretian.dev/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/aretian.dev/privkey.pem; # managed by Certbot
	include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
	ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

    gzip            on;
    gzip_types      text/plain application/xml text/css application/javascript;
    gzip_min_length 1000;
}

# Docs server
server {
	server_name docs.aretian.dev;
    # auth_basic "Restricted Access";
    # auth_basic_user_file /etc/nginx/.htpasswd;
    # location / {
        # return 404;
    # }
    location / {
        expires $expires;
        include /etc/nginx/proxy_params;
        proxy_redirect                      off;
        proxy_read_timeout          1m;
        proxy_connect_timeout       1m;
        proxy_pass                          http://127.0.0.1:5000; # Flask app address
    }
    location /admin {
        # autoindex on;
        alias /home/fer/aretian/docs-admin/docs/.vuepress/dist/;
        try_files $uri $uri/ =404;
        auth_basic "Restricted Access";
        auth_basic_user_file /etc/nginx/.htpasswd-admin;
    }
    # location /genomics {
    #     # autoindex on;
    #     alias /home/fer/aretian/docs-genomics/docs/.vuepress/dist/;
    #     try_files $uri $uri/ =404;
    #     auth_basic "Restricted Access";
    #     auth_basic_user_file /etc/nginx/.htpasswd-genomics;
    # }
    listen [::]:443 ssl; # managed by Certbot
    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/aretian.dev/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/aretian.dev/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
}

# Staging server
server {
	server_name staging.aretian.dev;
    # location / {
    #     return 444;
    # }
    location / {
        expires $expires;

        proxy_redirect                      off;
        proxy_set_header Host               $host;
        proxy_set_header X-Real-IP          $remote_addr;
        proxy_set_header X-Forwarded-For    $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto  $scheme;
        proxy_read_timeout          1m;
        proxy_connect_timeout       1m;
        proxy_pass                          http://127.0.0.1:5000; # Staging server
        # proxy_pass                          http://127.0.0.1:3000; # Staging server
    }

    listen [::]:443 ssl; # managed by Certbot
    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/aretian.dev/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/aretian.dev/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
}

# Managed by Certbot
server {
    if ($host = www.aretian.dev) {
        return 301 https://$host$request_uri;
    } # managed by Certbot
    if ($host = aretian.dev) {
        return 301 https://$host$request_uri;
    } # managed by Certbot
	listen 80 default_server;
	listen [::]:80 default_server;
	server_name aretian.dev www.aretian.dev;
    return 404; # managed by Certbot
}
server {
    if ($host = staging.aretian.dev) {
        return 301 https://$host$request_uri;
    } # managed by Certbot
    listen 80;
    listen [::]:80;
	server_name staging.aretian.dev;
    return 404; # managed by Certbot
}
server {
    if ($host = docs.aretian.dev) {
        return 301 https://$host$request_uri;
    } # managed by Certbot
	server_name docs.aretian.dev;
    listen [::]:80;
    listen 80;
    return 404; # managed by Certbot
}
