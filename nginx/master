##
# You should look at the following URL's in order to grasp a solid understanding
# of Nginx configuration files in order to fully unleash the power of Nginx.
# https://www.nginx.com/resources/wiki/start/
# https://www.nginx.com/resources/wiki/start/topics/tutorials/config_pitfalls/
# https://wiki.debian.org/Nginx/DirectoryStructure
#
# In most cases, administrators will remove this file from sites-enabled/ and
# leave it as reference inside of sites-available where it will continue to be
# updated by the nginx packaging team.
#
# This file will automatically load configuration files provided by other
# applications, such as Drupal or Wordpress. These applications will be made
# available underneath a path with that package name, such as /drupal8.
#
# Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.
##
# top-level http config for websocket headers
# # If Upgrade is defined, Connection = upgrade
# # If Upgrade is empty, Connection = close
map $http_upgrade $connection_upgrade {
	default upgrade;
	''      close;
}

map $sent_http_content_type $expires {
    "text/html"                 epoch;
    "text/html; charset=utf-8"  epoch;
    default                     off;
}
# Default server configuration
#
server {

	# SSL configuration
	#
	# listen 443 ssl default_server;
	# listen [::]:443 ssl default_server;
	#
	# Note: You should disable gzip for SSL traffic.
	# See: https://bugs.debian.org/773332
	#
	# Read up on ssl_ciphers to ensure a secure configuration.
	# See: https://bugs.debian.org/765782
	#
	# Self signed certs generated by the ssl-cert package
	# Don't use them in a production server!
	#
	# include snippets/snakeoil.conf;

	server_name aretian.dev www.aretian.dev;

	# root /home/fer/aretian/aretian-platform/dist;
	# root /var/www/html;

	# Add index.php to the list if you are using PHP
	# index index.html index.htm index.nginx-debian.html;

    location / {
        expires $expires;

        proxy_redirect                      off;
        proxy_set_header Host               $host;
        proxy_set_header X-Real-IP          $remote_addr;
        proxy_set_header X-Forwarded-For    $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto  $scheme;
        proxy_read_timeout          1m;
        proxy_connect_timeout       1m;
        proxy_pass                          http://127.0.0.1:3000; # set the address of the Node.js instance here
    }
	# location / {
		# First attempt to serve request as file, then
		# as directory, then fall back to displaying a 404.
		# try_files $uri $uri/ =404;
        # return 301 /docs;
	# }

    # location /docs {
        # autoindex on;
        # alias /home/fer/aretian/docs/docs/.vuepress/dist/;
        # try_files $uri $uri/ =404;
        # auth_basic "Restricted Access";
        # auth_basic_user_file /etc/nginx/.htpasswd;
    # }

    # location /docs/admin {
        # autoindex on;
        # alias /home/fer/aretian/docs-admin/docs/.vuepress/dist/;
        # try_files $uri $uri/ =404;
        # auth_basic "Restricted Access";
        # auth_basic_user_file /etc/nginx/.htpasswd-admin;
    # }

	location /jupyter/ {    
	# NOTE important to also set base url of jupyterhub to /jupyter in its config
		proxy_pass http://127.0.0.1:8000;

		proxy_redirect   off;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header Host $host;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header X-Forwarded-Proto $scheme;

		# websocket headers
		proxy_set_header Upgrade $http_upgrade;
		proxy_set_header Connection $connection_upgrade;
	}


	listen [::]:443 http2 ssl ipv6only=on; # managed by Certbot
	listen 443 http2 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/aretian.dev/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/aretian.dev/privkey.pem; # managed by Certbot
	include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
	ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

    gzip            on;
    gzip_types      text/plain application/xml text/css application/javascript;
    gzip_min_length 1000;


	# pass PHP scripts to FastCGI server
	#
	#location ~ \.php$ {
	#	include snippets/fastcgi-php.conf;
	#
	#	# With php-fpm (or other unix sockets):
	#	fastcgi_pass unix:/var/run/php/php7.0-fpm.sock;
	#	# With php-cgi (or other tcp sockets):
	#	fastcgi_pass 127.0.0.1:9000;
	#}

	# deny access to .htaccess files, if Apache's document root
	# concurs with nginx's one
	#
	#location ~ /\.ht {
	#	deny all;
	#}



}


# Virtual Host configuration for example.com
#
# You can move that to a different file under sites-available/ and symlink that
# to sites-enabled/ to enable it.
#
#server {
#	listen 80;
#	listen [::]:80;
#
#	server_name example.com;
#
#	root /var/www/example.com;
#	index index.html;
#
#	location / {
#		try_files $uri $uri/ =404;
#	}


# }

# Staging server
server {
	server_name staging.aretian.dev;
	root /home/fer/aretian/aretian-platform/dist;
	index index.html index.htm index.nginx-debian.html;

    location / {
        expires $expires;

        proxy_redirect                      off;
        proxy_set_header Host               $host;
        proxy_set_header X-Real-IP          $remote_addr;
        proxy_set_header X-Forwarded-For    $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto  $scheme;
        proxy_read_timeout          1m;
        proxy_connect_timeout       1m;
        proxy_pass                          http://127.0.0.1:8080; # set the address of the Node.js instance here
    }

    listen [::]:443 ssl; # managed by Certbot
    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/aretian.dev/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/aretian.dev/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

}

# Docs server
server {
	server_name docs.aretian.dev;
	root /home/fer/aretian/docs/docs/.vuepress/dist;
	index index.html index.htm index.nginx-debian.html;

    auth_basic "Restricted Access";
    auth_basic_user_file /etc/nginx/.htpasswd;

    location / {
        try_files $uri $uri/ =404;
        # auth_basic "Restricted Access";
        # auth_basic_user_file /etc/nginx/.htpasswd;
    }

    location /admin {
        # autoindex on;
        alias /home/fer/aretian/docs-admin/docs/.vuepress/dist/;
        try_files $uri $uri/ =404;
        auth_basic "Restricted Access";
        auth_basic_user_file /etc/nginx/.htpasswd-admin;
    }

    location /genomics {
        # autoindex on;
        alias /home/fer/aretian/docs-genomics/docs/.vuepress/dist/;
        try_files $uri $uri/ =404;
        auth_basic "Restricted Access";
        auth_basic_user_file /etc/nginx/.htpasswd-genomics;
    }

    listen [::]:443 ssl; # managed by Certbot
    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/aretian.dev/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/aretian.dev/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

}

# Managed by Certbot
server {
    if ($host = www.aretian.dev) {
        return 301 https://$host$request_uri;
    } # managed by Certbot

    if ($host = aretian.dev) {
        return 301 https://$host$request_uri;
    } # managed by Certbot

	listen 80 default_server;
	listen [::]:80 default_server;

	server_name aretian.dev www.aretian.dev;
    return 404; # managed by Certbot
}


server {
    if ($host = staging.aretian.dev) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


    listen 80;
    listen [::]:80;

	server_name staging.aretian.dev;
    return 404; # managed by Certbot


}

server {
    if ($host = docs.aretian.dev) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


	server_name docs.aretian.dev;

    listen [::]:80;
    listen 80;
    return 404; # managed by Certbot


}
